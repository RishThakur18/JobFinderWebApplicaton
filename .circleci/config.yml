version: 2.1

workflows:
  build-test-pushToDockerHub-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      -  pushToDockerHub:
           requires:
             - test
      -  deploy:
           requires:
             - pushToDockerHub
jobs:
  build:
    environment:
      _JAVA_OPTIONS: "-Xmx2g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: cimg/openjdk:17.0.1
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          name: Load dependencies
          command: |
            chmod +x gradlew
            ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - persist_to_workspace:
          root: .
          paths:
            - build
  test:
    environment:
      _JAVA_OPTIONS: "-Xmx2g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: cimg/openjdk:17.0.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: |
            chmod +x gradlew
            ./gradlew test 

  pushToDockerHub:
    environment:
      _JAVA_OPTIONS: "-Xmx2g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: cimg/openjdk:17.0.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: dockerhub login
          command: docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
      - attach_workspace:
          at: .
      - run:
          name: Push To Docker hub
          command: |
            chmod +x gradlew
            ./gradlew docker dockerTagDockerHub dockerPushDockerHub
            
  deploy:
    machine:
      image: ubuntu-2204:2022.04.1
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build_and_push_Docker_image to Heroku
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker pull rishabhsingh18/jobify-backend:0.0.1-SNAPSHOT
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a python-django-starter web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a python-django-starter web
 

